
R version 4.3.1 (2023-06-16 ucrt) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "aldvmm"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "aldvmm-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('aldvmm')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("aldvmm-package")
> ### * aldvmm-package
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aldvmm-package
> ### Title: aldvmm: Adjusted Limited Dependent Variable Mixture Models
> ### Aliases: aldvmm-package
> 
> ### ** Examples
> 
> data(utility)
> 
>  fit <- aldvmm(eq5d ~ age + female | 1,
+                data = utility,
+                psi = c(0.883, -0.594),
+                ncmp = 2)
> 
>  summary(fit)

Call:
aldvmm(formula = eq5d ~ age + female | 1, data = utility, psi = c(0.883, 
    -0.594), ncmp = 2)


Coefficients:                                                                            
 --------- ----------- -------- ---------- -------- -------- ------- -------
                       Estimate Std. Error  t value Pr(>|t|)   2.5 %  97.5 %
 --------- ----------- -------- ---------- -------- -------- ------- -------
 E[y|X, c]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)    0.038     0.0522   0.7265   0.4684 -0.0651   0.141
                   age   -1e-04      0.001  -0.1398    0.889 -0.0021  0.0018
                female  -0.1407     0.0299  -4.7014        0 -0.1998 -0.0817
               lnsigma  -2.3729      0.108 -21.9783        0 -2.5859   -2.16
     Comp2 (Intercept)   0.5055     0.0552   9.1595        0  0.3967  0.6144
                   age   -8e-04      0.001  -0.7751   0.4393 -0.0028  0.0012
                female   0.1565     0.0332   4.7135        0   0.091   0.222
               lnsigma  -1.7638       0.07 -25.2056        0 -1.9018 -1.6258
 --------- ----------- -------- ---------- -------- -------- ------- -------
    P[c|X]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)  -1.0818     0.1766  -6.1261        0 -1.4301 -0.7335
 --------- ----------- -------- ---------- -------- -------- ------- -------
Log-likelihood: 14.09 	AIC: 46.19 	BIC: 75.87
Degrees of Freedom (null):     195 
Degrees of Freedom (residual): 191 
> 
>  yhat <- predict(fit)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aldvmm-package", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aldvmm")
> ### * aldvmm
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aldvmm
> ### Title: Fitting Adjusted Limited Dependent Variable Mixture Models
> ### Aliases: aldvmm
> 
> ### ** Examples
> 
> data(utility)
> 
>  fit <- aldvmm(eq5d ~ age + female | 1,
+                data = utility,
+                psi = c(0.883, -0.594),
+                ncmp = 2)
> 
>  summary(fit)

Call:
aldvmm(formula = eq5d ~ age + female | 1, data = utility, psi = c(0.883, 
    -0.594), ncmp = 2)


Coefficients:                                                                            
 --------- ----------- -------- ---------- -------- -------- ------- -------
                       Estimate Std. Error  t value Pr(>|t|)   2.5 %  97.5 %
 --------- ----------- -------- ---------- -------- -------- ------- -------
 E[y|X, c]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)    0.038     0.0522   0.7265   0.4684 -0.0651   0.141
                   age   -1e-04      0.001  -0.1398    0.889 -0.0021  0.0018
                female  -0.1407     0.0299  -4.7014        0 -0.1998 -0.0817
               lnsigma  -2.3729      0.108 -21.9783        0 -2.5859   -2.16
     Comp2 (Intercept)   0.5055     0.0552   9.1595        0  0.3967  0.6144
                   age   -8e-04      0.001  -0.7751   0.4393 -0.0028  0.0012
                female   0.1565     0.0332   4.7135        0   0.091   0.222
               lnsigma  -1.7638       0.07 -25.2056        0 -1.9018 -1.6258
 --------- ----------- -------- ---------- -------- -------- ------- -------
    P[c|X]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)  -1.0818     0.1766  -6.1261        0 -1.4301 -0.7335
 --------- ----------- -------- ---------- -------- -------- ------- -------
Log-likelihood: 14.09 	AIC: 46.19 	BIC: 75.87
Degrees of Freedom (null):     195 
Degrees of Freedom (residual): 191 
> 
>  yhat <- predict(fit)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aldvmm", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("utility")
> ### * utility
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: utility
> ### Title: Simulated Example Data of Health State Utilities.
> ### Aliases: utility
> ### Keywords: datasets
> 
> ### ** Examples
> 
> set.seed(101010101)
> utility                 <- data.frame(female = rbinom(size = 1,
+                                       n      = 200,
+                                       p      = 0.6))
> utility[, 'age']        <- stats::rnorm(n    = 200,
+                                         mean = 50 + utility$female*10,
+                                         sd   = 15)
> utility[1:50, 'eq5d']   <- stats::rnorm(n    = 50,
+                                         mean = 0 - 0.1 *
+                                               utility[1:50, 'female'] +
+                                               0.0005 * utility[1:50, 'age'],
+                                         sd   = 0.1)
> utility[51:200, 'eq5d'] <- stats::rnorm(n    = 150,
+                                         mean = 0.5 +
+                                            0.1 * utility[51:200, 'female'] +
+                                            0.0001*utility[51:200, 'age'],
+                                         sd   = 0.2)
> utility[utility$eq5d<(-0.594), 'eq5d'] <- -0.594
> utility[utility$eq5d>0.883, 'eq5d'] <- 1
> hist(utility$eq5d, breaks = 50)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("utility", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  3 0.11 3.37 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
