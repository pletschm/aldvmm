
R version 4.3.0 (2023-04-21 ucrt) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "aldvmm"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "aldvmm-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('aldvmm')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("aldvmm-package")
> ### * aldvmm-package
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aldvmm-package
> ### Title: aldvmm: Adjusted Limited Dependent Variable Mixture Models
> ### Aliases: aldvmm-package
> 
> ### ** Examples
> 
> data(utility)
> 
>  fit <- aldvmm(eq5d ~ age + female | 1,
+                data = utility,
+                psi = c(0.883, -0.594),
+                ncmp = 2)
> 
>  summary(fit)

Call:
aldvmm(formula = eq5d ~ age + female | 1, data = utility, psi = c(0.883, 
    -0.594), ncmp = 2)


Coefficients:                                                                            
 --------- ----------- -------- ---------- -------- -------- ------- -------
                       Estimate Std. Error  t value Pr(>|t|)   2.5 %  97.5 %
 --------- ----------- -------- ---------- -------- -------- ------- -------
 E[y|X, c]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)   0.5804     0.0542  10.7046        0  0.4735  0.6874
                   age    9e-04     0.0012   0.7555   0.4509 -0.0014  0.0031
                female  -0.7385       0.04 -18.4798        0 -0.8174 -0.6597
               lnsigma   -2.341      0.128 -18.2835        0 -2.5936 -2.0884
     Comp2 (Intercept)   0.2655     0.0675   3.9314    1e-04  0.1323  0.3987
                   age   -1e-04     0.0011  -0.1201   0.9045 -0.0024  0.0021
                female   0.3599     0.0398   9.0531        0  0.2815  0.4383
               lnsigma  -1.6506     0.0742 -22.2405        0  -1.797 -1.5042
 --------- ----------- -------- ---------- -------- -------- ------- -------
    P[c|X]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)  -1.0928     0.2077  -5.2607        0 -1.5025  -0.683
 --------- ----------- -------- ---------- -------- -------- ------- -------
Log-likelihood: 19.85 	AIC: 57.7 	BIC: 87.39
Degrees of Freedom (null):     195 
Degrees of Freedom (residual): 191 
> 
>  yhat <- predict(fit,
+                  newdata = utility)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aldvmm-package", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aldvmm")
> ### * aldvmm
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aldvmm
> ### Title: Fitting Adjusted Limited Dependent Variable Mixture Models
> ### Aliases: aldvmm
> 
> ### ** Examples
> 
> data(utility)
> 
>  fit <- aldvmm(eq5d ~ age + female | 1,
+                data = utility,
+                psi = c(0.883, -0.594),
+                ncmp = 2)
> 
>  summary(fit)

Call:
aldvmm(formula = eq5d ~ age + female | 1, data = utility, psi = c(0.883, 
    -0.594), ncmp = 2)


Coefficients:                                                                            
 --------- ----------- -------- ---------- -------- -------- ------- -------
                       Estimate Std. Error  t value Pr(>|t|)   2.5 %  97.5 %
 --------- ----------- -------- ---------- -------- -------- ------- -------
 E[y|X, c]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)   0.5804     0.0542  10.7046        0  0.4735  0.6874
                   age    9e-04     0.0012   0.7555   0.4509 -0.0014  0.0031
                female  -0.7385       0.04 -18.4798        0 -0.8174 -0.6597
               lnsigma   -2.341      0.128 -18.2835        0 -2.5936 -2.0884
     Comp2 (Intercept)   0.2655     0.0675   3.9314    1e-04  0.1323  0.3987
                   age   -1e-04     0.0011  -0.1201   0.9045 -0.0024  0.0021
                female   0.3599     0.0398   9.0531        0  0.2815  0.4383
               lnsigma  -1.6506     0.0742 -22.2405        0  -1.797 -1.5042
 --------- ----------- -------- ---------- -------- -------- ------- -------
    P[c|X]                                                                  
 --------- ----------- -------- ---------- -------- -------- ------- -------
     Comp1 (Intercept)  -1.0928     0.2077  -5.2607        0 -1.5025  -0.683
 --------- ----------- -------- ---------- -------- -------- ------- -------
Log-likelihood: 19.85 	AIC: 57.7 	BIC: 87.39
Degrees of Freedom (null):     195 
Degrees of Freedom (residual): 191 
> 
>  yhat <- predict(fit,
+                  newdata = utility)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aldvmm", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("utility")
> ### * utility
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: utility
> ### Title: Simulated Example Data of Health State Utilities.
> ### Aliases: utility
> ### Keywords: datasets
> 
> ### ** Examples
> 
> set.seed(101010101)
> utility                 <- data.frame(female = rbinom(size = 1,
+                                       n      = 200,
+                                       p      = 0.6))
> utility[, 'age']        <- stats::rnorm(n    = 200,
+                                         mean = 50 + utility$female*10,
+                                         sd   = 15)
> utility[1:50, 'eq5d']   <- stats::rnorm(n    = 50,
+                                         mean = 0 - 0.1 *
+                                               utility[1:50, 'female'] +
+                                               0.0005 * utility[1:50, 'age'],
+                                         sd   = 0.1)
> utility[51:200, 'eq5d'] <- stats::rnorm(n    = 150,
+                                         mean = 0.5 +
+                                            0.1 * utility[51:200, 'female'] +
+                                            0.0001*utility[51:200, 'age'],
+                                         sd   = 0.2)
> utility[utility$eq5d<(-0.594), 'eq5d'] <- -0.594
> utility[utility$eq5d>0.883, 'eq5d'] <- 1
> hist(utility$eq5d, breaks = 50)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("utility", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  7.42 0.37 8.04 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
